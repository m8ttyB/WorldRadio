# ============================================================
# WorldRadio — Render Blueprint (render.yaml)
# ============================================================
services:
  # ----------------------------------------------------------
  # MongoDB removed - application uses external Radio Browser API
  # ----------------------------------------------------------

  # ----------------------------------------------------------
  # FastAPI / Django / Flask backend
  # ----------------------------------------------------------
  - type:            web
    name:            backend
    runtime:         docker
    rootDir:         .                   # context for the Dockerfile
    dockerfilePath:  Dockerfile.backend
    plan:            starter                # free • starter • standard • pro
    healthCheckPath: /healthz            # root-level health check endpoint
    # scaling:
    #   minInstances: 1
    #   maxInstances: 3
    #   targetCPUPercent: 80
    envVars:
      # Environment variables for backend service
      - key:   DEBUG
        value: false

  # ----------------------------------------------------------
  # React front-end (served by nginx in your Dockerfile)
  # ----------------------------------------------------------
  - type:            web
    name:            frontend
    runtime:         docker
    rootDir:         .
    dockerfilePath:  Dockerfile.frontend
    plan:            starter
    buildFilter:
      paths:
        - frontend/**
        - Dockerfile.frontend
        - nginx.conf
    buildCommand: |
      docker build -t frontend \
        --build-arg REACT_APP_BACKEND_URL=${BACKEND_URL} \
        -f Dockerfile.frontend .
    envVars:
      # Backend URL for React app
      - key:   REACT_APP_BACKEND_URL
        fromService:
          name:   backend
          type:   web
          property: hostport          # resolves to host:port
      # Nginx configuration
      - key:   BACKEND_URL
        fromService:
          name:   backend
          type:   web
          property: hostport          # resolves to host:port